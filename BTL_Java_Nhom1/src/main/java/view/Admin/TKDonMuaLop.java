/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view.Admin;

import controller.DonMuaLopController;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import model.FakeData;
import model.TTDonMuaLop;
import model.TableDonMuaLop;

/**
 *
 * @author HP
 */
public class TKDonMuaLop extends javax.swing.JFrame {

    /**
     * Creates new form TKDonMuaLop
     */
    private TableDonMuaLop tableModel;
    private ArrayList<TTDonMuaLop> dsMl = new ArrayList<>();
    private List<String> dsTenSach;
   
   
     private void loadDataFromFile() {
        dsMl = FakeData.readDonMuaLopInfo();
        tableModel = new TableDonMuaLop(dsMl);
        tbl_TKmualop.setModel(tableModel);
        calculateTotalValue();
    }
     private void calculateTotalValue() {
        double totalValue = 0;
        for (TTDonMuaLop don : dsMl) {
            totalValue += don.getTongTien();
        }
        txtTongGT.setText(String.valueOf(totalValue));
    }
    private boolean isOrderIDExists(String maDonMuaLe) {
        for (TTDonMuaLop donml : dsMl) {
            if (donml.getMaDonMuaLop().equals(maDonMuaLe)) {
                return true;
            }
        }
        return false;
    }
   
    private void loadTenSach() {
    dsTenSach = FakeData.layDSTenSach();
    cbbTenSach.removeAllItems();
    for (String tenSach : dsTenSach) {
        cbbTenSach.addItem(tenSach);
    }
    cbbTenSach.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        cbTenSachActionPerformed(evt);
    }

        private void cbTenSachActionPerformed(ActionEvent evt) {
            String tenSach = (String) cbbTenSach.getSelectedItem();
        if (tenSach != null) {
        int donGia = FakeData.layDonGiaTheoTen(tenSach);
        txtDonGia.setText(String.valueOf(donGia));
        txtmasach.setText(FakeData.layMaTheoTen(tenSach));
    }
       }
    });
    }
    private void addTableSelectionListener() {
    ListSelectionModel selectionModel = tbl_TKmualop.getSelectionModel();
    selectionModel.addListSelectionListener(new ListSelectionListener() {
        public void valueChanged(ListSelectionEvent e) {
            if (!e.getValueIsAdjusting()) {
                updateTextFieldsWithSelectedRow();
            }
        }
    });
}
    private void updateTextFieldsWithSelectedRow() {
    int selectedRow = tbl_TKmualop.getSelectedRow();
    if (selectedRow >= 0) {
        TTDonMuaLop selectedDon = dsMl.get(selectedRow);
        
        txtmaML.setText(selectedDon.getMaDonMuaLop());
        txtMaSV.setText(selectedDon.getMaSV());
        txtmasach.setText(selectedDon.getMaSach());
        cbbTenSach.setSelectedItem(selectedDon.getTenSach());
        txtsoSV.setText(String.valueOf(selectedDon.getSoSV()));
        txtDonGia.setText(String.valueOf(selectedDon.getDonGia()));
    }
}
    public TKDonMuaLop() {
         initComponents();
    loadTenSach();
    loadDataFromFile();
    addTableSelectionListener(); // Add this line
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtmasach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtmaML = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtsoSV = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_TKmualop = new javax.swing.JTable();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtTongGT = new javax.swing.JTextField();
        cbbTenSach = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        btnThoat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel1.setText("Mã đơn mua lớp");

        txtDonGia.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtDonGia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDonGiaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel2.setText("Mã sách");

        txtmasach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel3.setText("Tên sách");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel4.setText("Đơn giá");

        txtmaML.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel5.setText("Số sinh viên đăng ký");

        txtsoSV.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtsoSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtsoSVActionPerformed(evt);
            }
        });

        tbl_TKmualop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã đơn mua lớp", "Mã SV Đăng Ký Phiếu", "Mã sách", "Tên sách", "Số SV đăng ký", "Đơn giá", "Tổng tiền"
            }
        ));
        jScrollPane1.setViewportView(tbl_TKmualop);

        btnThem.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel6.setText("Tổng giá trị");

        txtTongGT.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        txtTongGT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTongGTActionPerformed(evt);
            }
        });

        cbbTenSach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        cbbTenSach.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        jLabel7.setText("Mã SV đăng ký");

        txtMaSV.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N

        btnThoat.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnThoat.setText("Thoát");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtmaML, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(txtmasach, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)
                    .addComponent(cbbTenSach, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDonGia)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtMaSV)
                            .addComponent(txtsoSV, javax.swing.GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(144, 144, 144)
                        .addComponent(btnThem)
                        .addGap(26, 26, 26)
                        .addComponent(btnSua)
                        .addGap(39, 39, 39)
                        .addComponent(btnXoa)
                        .addGap(61, 61, 61)
                        .addComponent(btnThoat)
                        .addGap(133, 133, 133)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTongGT))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 974, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtmaML, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtmasach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(txtsoSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbbTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnThem)
                            .addComponent(btnSua)
                            .addComponent(btnXoa)
                            .addComponent(btnThoat)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTongGT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDonGiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDonGiaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDonGiaActionPerformed

    private void txtsoSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtsoSVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtsoSVActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:
        try {
                String maDonMuaLop = txtmaML.getText();
                if (isOrderIDExists(maDonMuaLop)) {
                JOptionPane.showMessageDialog(this, "Mã đơn hàng đã tồn tại. Vui lòng nhập mã khác.", "Lỗi", JOptionPane.ERROR_MESSAGE);
                return;
            }
                String maSV = txtMaSV.getText();
                String tenSach = (String) cbbTenSach.getSelectedItem();
                String maSach = txtmasach.getText();
                int soSV = Integer.parseInt(txtsoSV.getText());
                int donGia = Integer.parseInt(txtDonGia.getText());
                int tongTien = soSV * donGia;
                if (soSV < 0) {
            JOptionPane.showMessageDialog(this, "Số lượng không thể âm. Vui lòng nhập lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
                TTDonMuaLop newDon = new TTDonMuaLop(maDonMuaLop, maSV, maSach, tenSach, soSV ,donGia, (int) tongTien);
                dsMl.add(newDon);

                DonMuaLopController.saveDonMuaLopInfo(newDon);
                loadDataFromFile();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Dữ liệu không hợp lệ. Vui lòng kiểm tra lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
     int selectedRow = tbl_TKmualop.getSelectedRow();
    if (selectedRow >= 0) {
        TTDonMuaLop selectedDon = dsMl.get(selectedRow);

        // Get updated values from text fields
        String newMaDonMuaLop = txtmaML.getText();
        String newMaSach = txtmasach.getText();
        String newTenSach = (String) cbbTenSach.getSelectedItem();
        int newDonGia = Integer.parseInt(txtDonGia.getText());
        int newSoSV = Integer.parseInt(txtsoSV.getText());
        int newTongTien = newDonGia * newSoSV;
        String newMaSV = txtMaSV.getText();
         if (newSoSV < 0) {
            JOptionPane.showMessageDialog(this, "Số lượng không thể âm. Vui lòng nhập lại.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }
        // Check if the new order ID already exists in another row
        boolean isDuplicate = false;
        for (int i = 0; i < dsMl.size(); i++) {
            if (i != selectedRow && dsMl.get(i).getMaDonMuaLop().equals(newMaDonMuaLop)) {
                isDuplicate = true;
                break;
            }
        }

        if (isDuplicate) {
            JOptionPane.showMessageDialog(this, "Mã đơn mua lớp đã tồn tại. Vui lòng nhập mã khác.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Update the selected order with correct values
        selectedDon.setMaDonMuaLop(newMaDonMuaLop);
        selectedDon.setMaSV(newMaSV);
        selectedDon.setMaSach(newMaSach);
        selectedDon.setTenSach(newTenSach);
        selectedDon.setDonGia(newDonGia);
        selectedDon.setSoSV(newSoSV);
        selectedDon.setTongTien(newTongTien);

        // Update the table model
        tableModel.fireTableRowsUpdated(selectedRow, selectedRow);

        // Save the updated list back to the file
        DonMuaLopController.saveAllDonMuaLopInfo(dsMl);
        loadDataFromFile();

        // Update total value
        calculateTotalValue();
    } else {
        JOptionPane.showMessageDialog(this, "Hãy chọn một dòng để sửa", "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void txtTongGTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTongGTActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTongGTActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
         int selectedRow = tbl_TKmualop.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng để xóa.", "Thông báo", JOptionPane.WARNING_MESSAGE);
            return;
        }

        int confirmDialogResult = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa dòng này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirmDialogResult == JOptionPane.YES_OPTION) {
            TTDonMuaLop selectedDon = dsMl.get(selectedRow);
            dsMl.remove(selectedDon);
            DonMuaLopController.saveAllDonMuaLopInfo(dsMl);
             loadDataFromFile();
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        this.dispose();
        TrangChuAdmin trangChuAdmin = new TrangChuAdmin();
        trangChuAdmin.setVisible(true);
    }//GEN-LAST:event_btnThoatActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TKDonMuaLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TKDonMuaLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TKDonMuaLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TKDonMuaLop.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TKDonMuaLop().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cbbTenSach;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbl_TKmualop;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtTongGT;
    private javax.swing.JTextField txtmaML;
    private javax.swing.JTextField txtmasach;
    private javax.swing.JTextField txtsoSV;
    // End of variables declaration//GEN-END:variables
}
